<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.jang.portfolio.user">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.jang.portfolio.board">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<!-- 
	<context:component-scan base-package="com.jang.portfolio.mail"/>
	<context:component-scan base-package="com.jang.portfolio.common"/>
	<context:component-scan base-package="com.jang.portfolio.map"/>
	 -->
		 
	<!-- hikariCP -->
	<beans:bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <beans:property name="poolName" value="springHikariCP" />
	    <beans:property name="connectionTestQuery" value="SELECT 1" />
	    <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
	    <beans:property name="maximumPoolSize" value="10" />
	    <!-- <beans:property name="idleTimeout" value="30000" /> -->
	    
	    <beans:property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3307/portfolio?serverTimeZone=UTC"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="1234"/> 
	</beans:bean>
	
	<!-- HikariCP configuration
	<beans:bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <beans:constructor-arg ref="hikariConfig" />
	</beans:bean>
	
	지정된 패키지의 모든 MyBatis 관련 어노테이션을 찾아서 처리 
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		mapper-config 위치 
		<beans:property name="configLocation" value="classpath:config/mapper-config.xml" />
		sql문 mapper 위치 
		<beans:property name="mapperLocations">
			<beans:list>
				<beans:value>classpath*:config/userMapper.xml</beans:value>
				<beans:value>classpath*:config/boardMapper.xml</beans:value>
			</beans:list>
		</beans:property>
		
	</beans:bean>
	
	Mybatis Session Template 
	생성된 template을 DAO에서 사용함 
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
	-->
	<mybatis-spring:scan base-package="com.jang.portfolio.user.web.*"/>
	<mybatis-spring:scan base-package="com.jang.portfolio.user.service.*"/>
	<mybatis-spring:scan base-package="com.jang.portfolio.user.service.impl.*"/>
	
	<mybatis-spring:scan base-package="com.jang.portfolio.board.web.*"/>
	<mybatis-spring:scan base-package="com.jang.portfolio.board.service.impl.*"/>	 
	<mybatis-spring:scan base-package="com.jang.portfolio.board.service.*"/>
	
	<mybatis-spring:scan base-package="com.jang.portfolio.util.*" />
	
	<!-- 
	<mybatis-spring:scan base-package="com.jang.portfolio.common"/>
	<mybatis-spring:scan base-package="com.jang.portfolio.map"/>
	 -->
	 		
	<!-- JsonView -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<beans:property name="order" value="0" /> 
	</beans:bean> 
	
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"> 
		<beans:property name="contentType" value="application/json;charset=UTF-8"> </beans:property>
	</beans:bean>
	
	<!-- AES256 -->
	<beans:bean id="AES256Util" class="com.jang.portfolio.util.AES256Util" ></beans:bean>
	
	<!-- Utils -->
	<beans:bean id="utils" class="com.jang.portfolio.util.Utils"></beans:bean>
	
	<!-- 유저세션 -->
	<beans:bean id="LoginUserSession" class="com.jang.portfolio.util.LoginUserSession"></beans:bean>
	
	<!-- 공공데이터 -->
	<beans:bean id="publicData" class="com.jang.portfolio.util.ApiExplorer"></beans:bean>
	
	<!-- 회원가입 메일 인증 -->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="tmd2052@gmail.com" />
		<beans:property name="password" value="tmdgus2719!@" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
      			<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- 세션체크 -->
	<interceptors>
		<interceptor>
			<mapping path="/board/*"/>
			<beans:bean class="com.jang.portfolio.common.CheckInterceptor"/>
		</interceptor>
	</interceptors>
	
</beans:beans>
